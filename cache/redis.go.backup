package cache

import (
	"github.com/always-web/go-pkg/trace"
	"time"
)

var redisClients = make(map[string]*Redis)

type Redis struct {
	client        *redis.Client
	clusterClient *redis.ClusterClient
	trace         *trace.Cache
}

const (
	DefaultRedisClient = "default-redis-client"
	MinIdleConns       = 50
	PoolSize           = 20
	MaxRetries         = 3
)

func setDefaultOptions(opt *redis.Options) {
	if opt.DialTimeout == 0 {
		//默认值为5s
		opt.DialTimeout = 2 * time.Second
	}
	if opt.ReadTimeout == 0 {
		//默认值为3s
		opt.ReadTimeout = 2 * time.Second
	}
	if opt.WriteTimeout == 0 {
		//默认值3s
		opt.WriteTimeout = 2 * time.Second
	}
	if opt.PoolTimeout == 0 {
		//默认值为4s
		opt.PoolTimeout = 10 * time.Second
	}
}

func setDefaultClusterOptions(opt *redis.ClusterOptions) {
	if opt.DialTimeout == 0 {
		opt.DialTimeout = 2 * time.Second
	}
	if opt.ReadTimeout == 0 {
		//默认值为3s
		opt.ReadTimeout = 2 * time.Second
	}
	if opt.WriteTimeout == 0 {
		//默认值3s
		opt.WriteTimeout = 2 * time.Second
	}
	if opt.PoolTimeout == 0 {
		opt.PoolTimeout = 10 * time.Second
	}
}

func InitRedis(clientName string, opt *redis.Options, trace *trace.Cache) error {

	return nil
}
